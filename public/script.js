console.log("üåç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /api/hero");

fetch("/api/hero")
  .then((res) => {
    console.log("üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω:", res);
    return res.json();
  })
  .then((hero) => {
    console.log("üì¶ –ü–æ–ª—É—á–µ–Ω hero-–æ–±—ä–µ–∫—Ç:", hero);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ hero —Å id = 1
    if (hero.id === "1") {
      console.log(`üñºÔ∏è –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º hero: ${hero.title}`);
      
      const heroContainer = document.getElementById("hero"); // –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å id="hero"
      heroContainer.style.backgroundImage = `url('${hero.backgroundImage}')`;
      heroContainer.innerHTML = `
        <div id="hero-content">
          <h1>${hero.title}</h1>
          <p>${hero.description}</p>
        </div>
      `;
      
      console.log("‚úÖ Hero –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω");
    } else {
      console.log("‚ÑπÔ∏è Hero —Å id=1 –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ hero:", err);
  });


console.log("üåç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /api/posts");

fetch("/api/posts")
  .then((res) => {
    console.log("üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω:", res);
    return res.json();
  })
  .then((posts) => {
    console.log("üì¶ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤:", posts.length);
    const container = document.getElementById("posts");
    posts.forEach((post, index) => {
      console.log(`üñºÔ∏è –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å—Ç #${index + 1}: ${post.title}`);

      const block = document.createElement("div");
      block.className = "post";
      block.innerHTML = `
            <img src="${post.coverImage}" alt="${post.title}">
            <div class="text-overlay">
            <div class="title">${post.title}</div>
            <div class="albumname">${post.albumname}</div>
            </div>
          `;
      block.addEventListener("click", () => {
        window.location.href = `/album.html?id=${album.id}`;
      });

      container.appendChild(block);
    });

    console.log("‚úÖ –í—Å–µ –ø–æ—Å—Ç—ã –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω—ã");
  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Å—Ç–æ–≤:", err);
  });
